
/*
    Generated by the Return of the Table compiler.
 */


import rtlib.*;
import java.util.Scanner;

class birthdays_anonymous_functor_1 implements FilterPredicate {


birthdays_anonymous_functor_1(){}
public boolean test(Record record) {
                return (((((record).entries[1]._Integer)>(1980))&&((birthdays.rt5((record)))>(16))));
            }}


public class birthdays {
    static UserDefinedType rt0;
static int rt1;
static int rt2;
static int rt3;
static Table rt4;
public static int rt5(Record rt6) {
{
int rt7;
(rt7)=(((rt1)-((rt6).entries[1]._Integer))-(1));
 if (((rt2)<((rt6).entries[2]._Integer))||(((rt2)==((rt6).entries[2]._Integer))&&((rt3)>=((rt6).entries[3]._Integer)))) {{
 return (rt7);

}} else { return ((rt7)-(1));}

}}

    private static Scanner input;
		static String globArgs[];
    
	public static void main(String args[]) {
        input = new Scanner(System.in);
				globArgs = new String[args.length];
				for(int globArgCounter = 0; globArgCounter < args.length; globArgCounter++)
					globArgs[globArgCounter] = args[globArgCounter];
				
        birthdays.rt0 = new UserDefinedType("Person");
birthdays.rt0.add("Person's name", Data.STRING_TYPE);
birthdays.rt0.add("Person's birthyear", Data.INT_TYPE);
birthdays.rt0.add("Person's birthmonth", Data.INT_TYPE);
birthdays.rt0.add("Person's birthday", Data.INT_TYPE);

{
(rt1)=(2011);
(rt2)=(12);
(rt3)=(25);
(rt4)=(CsvInterpreter.toTable(WorkingDir.getPath(("birthdays.csv")), birthdays.rt0));
System.out.println(((rt4).filter(new birthdays_anonymous_functor_1())));

}
    }    
}

